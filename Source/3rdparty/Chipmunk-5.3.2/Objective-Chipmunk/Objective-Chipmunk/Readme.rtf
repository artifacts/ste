{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh9260\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Objective-Chipmunk is an Objective-C wrapper for the Chipmunk Physics Library. While Chipmunk's C API is pretty easy to use, the Objective-C API is even better. The primary advantages of a native Objective-C API include integrating with the Cocoa memory management model and the Chipmunk Object protocol. The Chipmunk Object protocol unifies the basic Chipmunk types as well as making it easy to create custom composite collections of the basic types. Additionally, the wrapper adds many convenience methods for doing common setup tasks as well as helper methods that integrate it with the rest of the Cocoa Touch API. The wrapper tries to do things the Objective-C way, adding useful method variations where it makes sense to do so.\
\
The Objective-Chipmunk wrapper is free to use on Mac OS X as well as the iPhone simulator. Access to the iPhone optimized build of the library costs $200 per title to license. Please contact us at {\field{\*\fldinst{HYPERLINK "mailto:admin@howlingmoonsoftware.com"}}{\fldrslt admin@howlingmoonsoftware.com}} for further information.\
\
Objective-Chipmunk is a more or less straightforward wrapper of the C API in that there shouldn't be any nasty surprises. The only real change is that the 
\i cpGroup
\i0  and 
\i cpCollisionType
\i0  types are redefined to be a weak reference to 
\i id
\i0 . This allows you to use any object as a unique identifier. Static 
\i NSString
\i0  instances work particularly well in place of C enumerations. Chipmunk C structs that had a 
\i data
\i0  pointer have it initialized to point to the Objective-C object for it, and the accompanying Objective-C object has a weakly referenced 
\i data
\i0  property of type 
\i id
\i0  for you to use.}